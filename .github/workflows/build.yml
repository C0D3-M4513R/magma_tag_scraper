name: Build

on:
  push:
    branches: [staging,trying,dev,main]
    # Remove the line above to run when pushing to master
  pull_request:
    branches: [ main, dev]
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: "build-ci"
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        profile: ["release"] #"dev"
        target: [i686-unknown-linux-gnu, i686-pc-windows-gnu, x86_64-apple-darwin, x86_64-pc-windows-gnu, x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
        include:
          - target: i686-unknown-linux-gnu
#            install: gcc-multilib g++-multilib
#            os: ubuntu-latest
          - target: i686-pc-windows-gnu
#            install: gcc-mingw-w64-i686
#            os: ubuntu-latest
          - target: x86_64-apple-darwin
#            install:
#            os: ubuntu-latest
          - target: x86_64-pc-windows-gnu
#            install: gcc-mingw-w64-x86-64
#            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
#            install: gcc-multilib g++-multilib
#            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
#            install: gcc-aarch64-linux-gnu
#            os: ubuntu-latest

    steps:
      - uses: Swatinem/rust-cache@v2
#      - name: Install cross compilers
#        if: ${{ matrix.os == 'ubuntu-latest' }}
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y ${{ matrix.install }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
#          profile: minimal
      - uses: actions/checkout@v3
      - name: Install cargo-zigbuild
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-zigbuild
      - name: install zig
        run: |
          pip3 install ziglang
      - uses: actions-rs/cargo@v1
        with:
          command: zigbuild
          args: --target ${{ matrix.target }} --profile ${{ matrix.profile }} --package magma-scraper
      - uses: actions/upload-artifact@v3
        name: upload release artifact
        if: ${{ matrix.profile == 'release' }}
        with:
          name: magma_scraper-${{ matrix.target}}-release
          path: |
            target/release/magma_scraper*
            target/${{ matrix.target }}/release/magma_scraper*
      - uses: actions/upload-artifact@v3
        name: upload dev artifact
        if: ${{ matrix.profile == 'dev' }}
        with:
          name: magma_scraper-${{ matrix.target}}-dev-${{ matrix.feature }}
          path: |
            target/debug/magma_scraper*
            target/${{ matrix.target }}/debug/magma_scraper*
